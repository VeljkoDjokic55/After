// <auto-generated />
using System;
using AFTER.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AFTER.DAL.Migrations
{
    [DbContext(typeof(AFTERContext))]
    [Migration("20221006095144_cruds")]
    partial class cruds
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AFTER.DAL.Model.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("AFTER.DAL.Model.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Page")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Dt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("Feeder11Id")
                        .HasColumnType("int");

                    b.Property<int?>("Feeder33Id")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slrn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("Feeder11Id");

                    b.HasIndex("Feeder33Id");

                    b.ToTable("Dts");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Feeder11", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubstationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubstationId");

                    b.ToTable("Feeder11s");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Feeder33", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransmissionStationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransmissionStationId");

                    b.ToTable("Feeder33s");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Feeder33Ss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FeederId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubstationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeederId");

                    b.HasIndex("SubstationId");

                    b.ToTable("Feeder33Sss");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Substation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FeederId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeederId");

                    b.ToTable("Substations");
                });

            modelBuilder.Entity("AFTER.DAL.Model.TransmissionStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransmissionStations");
                });

            modelBuilder.Entity("AFTER.DAL.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Area", b =>
                {
                    b.HasOne("AFTER.DAL.Model.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("AFTER.DAL.Model.AuditLog", b =>
                {
                    b.HasOne("AFTER.DAL.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Dt", b =>
                {
                    b.HasOne("AFTER.DAL.Model.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("AFTER.DAL.Model.Feeder11", "Feeder11")
                        .WithMany()
                        .HasForeignKey("Feeder11Id");

                    b.HasOne("AFTER.DAL.Model.Feeder33", "Feeder33")
                        .WithMany()
                        .HasForeignKey("Feeder33Id");

                    b.Navigation("Area");

                    b.Navigation("Feeder11");

                    b.Navigation("Feeder33");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Feeder11", b =>
                {
                    b.HasOne("AFTER.DAL.Model.Substation", "Substation")
                        .WithMany()
                        .HasForeignKey("SubstationId");

                    b.Navigation("Substation");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Feeder33", b =>
                {
                    b.HasOne("AFTER.DAL.Model.TransmissionStation", "TransmissionStation")
                        .WithMany()
                        .HasForeignKey("TransmissionStationId");

                    b.Navigation("TransmissionStation");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Feeder33Ss", b =>
                {
                    b.HasOne("AFTER.DAL.Model.Feeder33", "Feeder")
                        .WithMany()
                        .HasForeignKey("FeederId");

                    b.HasOne("AFTER.DAL.Model.Substation", "Substation")
                        .WithMany("Feeders")
                        .HasForeignKey("SubstationId");

                    b.Navigation("Feeder");

                    b.Navigation("Substation");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Substation", b =>
                {
                    b.HasOne("AFTER.DAL.Model.Feeder33", "Feeder")
                        .WithMany()
                        .HasForeignKey("FeederId");

                    b.Navigation("Feeder");
                });

            modelBuilder.Entity("AFTER.DAL.Model.Substation", b =>
                {
                    b.Navigation("Feeders");
                });
#pragma warning restore 612, 618
        }
    }
}
